using KellermanSoftware.CompareNetObjects;
using Newtonsoft.Json;
using SeadQueryCore;
using SQT;
using SQT.Infrastructure;
using SQT.SQL.Matcher;
using System.Linq;
using System.Net.Http;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using Xunit;

namespace IntegrationTests.Sead
{

    [Collection("JsonSeededFacetContext")]
    public class FacetsLoadControllerTests : ControllerTest<TestHostWithContainer>, IClassFixture<TestHostWithContainer>
    {
        public JsonFacetContextFixture FacetContextFixture { get; }
        public DisposableFacetContextContainer MockService { get; }

        public FacetsLoadControllerTests(TestHostWithContainer hostBuilderFixture, SeadJsonFacetContextFixture facetContextFixture) : base(hostBuilderFixture)
        {
            FacetContextFixture = facetContextFixture;
            MockService = new DisposableFacetContextContainer(FacetContextFixture);
        }

        [Fact]
        public async Task API_GET_Server_IsAwake()
        {
            using var response = await Fixture.Client.GetAsync("api/facets");
            response.EnsureSuccessStatusCode();
            Assert.NotEmpty(await response.Content.ReadAsStringAsync());
        }

        /// <summary>
        /// Integeration test of SQL generated by a call to "api/facets/load"
        /// </summary>
        /// <param name="uri">Facet configuration</param>
        /// <param name="expectedJoinCount">Basically the number of tables involved in the join i.e. unique routes returned from Graoh.Find</param>
        /// <returns></returns>
        [Theory]
        [InlineData("dataset_methods:dataset_methods", false)]
        [InlineData("genus:dataset_master@10/sites@1985,2044,2046,2017,2045/genus@764,551", true)]
        [InlineData("relative_age_name:relative_age_name", true, "tbl_analysis_entities")]
        [InlineData("dataset_master:dataset_master@1", true, "tbl_analysis_entities", "tbl_dataset_masters", "tbl_datasets")]
        [InlineData("country:country@10", true, "tbl_analysis_entities", "tbl_locations")]
        [InlineData("country:country", true, "tbl_analysis_entities", "tbl_locations", "tbl_sites")]
        [InlineData("sites:country@10/sites", true, "tbl_analysis_entities", "tbl_sites", "tbl_sample_groups", "tbl_physical_samples")]
        [InlineData("sites:sites", true, "tbl_analysis_entities", "tbl_sites", "tbl_sample_groups", "tbl_physical_samples")]
        [InlineData("pollen://sites:sites", true, "tbl_analysis_entities", "tbl_sites", "tbl_sample_groups", "tbl_physical_samples")]
        [InlineData("ceramic://sites:sites", true, "tbl_analysis_entities", "tbl_sites", "tbl_sample_groups", "tbl_physical_samples")]
        public async Task Load_VariousFacetConfigs_HasExpectedSqlQuery(string uri, bool checkNotEmpty, params string[] expectedJoins)
        {
            // Arrange
            var facetsConfig = MockService.FakeFacetsConfig(uri);
            var json = JsonConvert.SerializeObject(facetsConfig);
            var payload = new StringContent(json, Encoding.UTF8, "application/json");

            // Act
            /* using */ var response = await Fixture.Client.PostAsync("api/facets/load", payload);

            // Assert
            response.EnsureSuccessStatusCode();

            var responseContent = await response.Content.ReadAsStringAsync();

            var facetContent = JsonConvert.DeserializeObject<FacetContent>(responseContent);

            Assert.NotNull(facetContent);

            if (checkNotEmpty)
                Assert.NotEmpty(facetContent.Items);

            // CompareLogic compare = new CompareLogic();
            // compare.Config.MembersToIgnore.AddRange(new string[] { "DomainFacet", "TargetFacet", "Facet", "Text" });
            // var areEqual = compare.Compare(facetsConfig, facetContent.FacetsConfig).AreEqual; // Will fail if bogus picks are removed
            // Assert.True(areEqual);

            var sqlQuery = facetContent.SqlQuery.Squeeze();

            var matcher = CategoryCountSqlCompilerMatcher.Create(facetsConfig.TargetFacet.FacetTypeId);
            var match = matcher.Match(sqlQuery);

            Assert.True(match.Success);
            Assert.Equal("count", match.AggregateType);
            Assert.True(match.InnerSelect.Success);
            Assert.NotEmpty(match.InnerSelect.Tables);
            Assert.True(expectedJoins.All(x => match.InnerSelect.Tables.Contains(x)));
        }


        /* SQL to generate the inline data
            with facet_tables as (
             select f.facet_id, f.facet_code, string_agg('"' || t.table_or_udf_name || '"', ', ') as tables
             from facet.facet f
             join facet.facet_table ft using (facet_id)
             join facet.table t using (table_id)
             group by f.facet_id, f.facet_code
            )
            select '[InlineData("' || d.facet_code || '://' || c.facet_code || ':' || c.facet_code ||'", ' || t.tables || coalesce(', ' || a.tables, '') || ')]'
            from facet.facet d
            join facet.facet_children r
            on r.facet_code = d.facet_code
            join facet.facet c
            on c.facet_code = r.child_facet_code
            join facet_tables as t
            on t.facet_code = c.facet_code
            left join facet_tables as a
            on a.facet_id = c.aggregate_facet_id
            and c.facet_type_id = 1 -- aggregate facet only used for discrete facets
             */
        /// <summary>
        /// Tests all domain facets
        /// </summary>
        /// <param name="uri"></param>
        /// <param name="expectedJoins"></param>
        /// <returns></returns>
        [Theory]
        [InlineData("palaeoentomology://ecocode_system:ecocode_system", "tbl_ecocode_systems", "tbl_ecocode_systems", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("palaeoentomology://ecocode:ecocode", "tbl_ecocode_definitions", "tbl_ecocode_definitions", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("palaeoentomology://abundances_all:abundances_all", "facet.view_abundance")]
        [InlineData("palaeoentomology://geochronology:geochronology", "tbl_geochronology")]
        [InlineData("palaeoentomology://relative_age_name:relative_age_name", "tbl_relative_ages", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("palaeoentomology://activeseason:activeseason", "tbl_seasons", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("palaeoentomology://family:family", "tbl_taxa_tree_families", "tbl_taxa_tree_families", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("palaeoentomology://genus:genus", "tbl_taxa_tree_genera", "tbl_taxa_tree_genera", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("palaeoentomology://species:species", "tbl_sites", "tbl_taxa_tree_authors", "tbl_taxa_tree_genera", "tbl_taxa_tree_master", "facet.view_abundance")]
        [InlineData("palaeoentomology://species_author:species_author", "tbl_taxa_tree_authors", "tbl_taxa_tree_authors", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("palaeoentomology://feature_type:feature_type", "tbl_feature_types", "tbl_physical_sample_features", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("palaeoentomology://tbl_biblio_modern:tbl_biblio_modern", "tbl_biblio", "facet.view_taxa_biblio", "tbl_sites")]
        [InlineData("palaeoentomology://country:country", "tbl_locations", "tbl_site_locations", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("palaeoentomology://sites:sites", "tbl_sites", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("palaeoentomology://sample_groups:sample_groups", "tbl_sample_groups", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("palaeoentomology://rdb_systems:rdb_systems", "tbl_rdb_systems", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("palaeoentomology://rdb_codes:rdb_codes", "tbl_rdb_codes", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("palaeoentomology://sample_group_sampling_contexts:sample_group_sampling_contexts", "tbl_sample_group_sampling_contexts", "tbl_sample_groups", "tbl_physical_samples", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("palaeoentomology://data_types:data_types", "tbl_data_types", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://ecocode_system:ecocode_system", "tbl_ecocode_systems", "tbl_ecocode_systems", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://ecocode:ecocode", "tbl_ecocode_definitions", "tbl_ecocode_definitions", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://abundances_all:abundances_all", "facet.view_abundance")]
        [InlineData("archaeobotany://geochronology:geochronology", "tbl_geochronology")]
        [InlineData("archaeobotany://relative_age_name:relative_age_name", "tbl_relative_ages", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://activeseason:activeseason", "tbl_seasons", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://family:family", "tbl_taxa_tree_families", "tbl_taxa_tree_families", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://genus:genus", "tbl_taxa_tree_genera", "tbl_taxa_tree_genera", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://species:species", "tbl_sites", "tbl_taxa_tree_authors", "tbl_taxa_tree_genera", "tbl_taxa_tree_master", "facet.view_abundance")]
        [InlineData("archaeobotany://species_author:species_author", "tbl_taxa_tree_authors", "tbl_taxa_tree_authors", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://feature_type:feature_type", "tbl_feature_types", "tbl_physical_sample_features", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://tbl_biblio_modern:tbl_biblio_modern", "tbl_biblio", "facet.view_taxa_biblio", "tbl_sites")]
        [InlineData("archaeobotany://country:country", "tbl_locations", "tbl_site_locations", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://sites:sites", "tbl_sites", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://sample_groups:sample_groups", "tbl_sample_groups", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://sample_group_sampling_contexts:sample_group_sampling_contexts", "tbl_sample_group_sampling_contexts", "tbl_sample_groups", "tbl_physical_samples", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://data_types:data_types", "tbl_data_types", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://modification_types:modification_types", "tbl_modification_types", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("archaeobotany://abundance_elements:abundance_elements", "tbl_abundance_elements", "tbl_abundances", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("pollen://geochronology:geochronology", "tbl_geochronology")]
        [InlineData("pollen://relative_age_name:relative_age_name", "tbl_relative_ages", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("pollen://sites:sites", "tbl_sites", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("pollen://ecocode:ecocode", "tbl_ecocode_definitions", "tbl_ecocode_definitions", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("pollen://family:family", "tbl_taxa_tree_families", "tbl_taxa_tree_families", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("pollen://genus:genus", "tbl_taxa_tree_genera", "tbl_taxa_tree_genera", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("pollen://species_author:species_author", "tbl_taxa_tree_authors", "tbl_taxa_tree_authors", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("pollen://feature_type:feature_type", "tbl_feature_types", "tbl_physical_sample_features", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("pollen://ecocode_system:ecocode_system", "tbl_ecocode_systems", "tbl_ecocode_systems", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("pollen://abundances_all:abundances_all", "facet.view_abundance")]
        [InlineData("pollen://activeseason:activeseason", "tbl_seasons", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("pollen://tbl_biblio_modern:tbl_biblio_modern", "tbl_biblio", "facet.view_taxa_biblio", "tbl_sites")]
        [InlineData("pollen://country:country", "tbl_locations", "tbl_site_locations", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("pollen://sample_groups:sample_groups", "tbl_sample_groups", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("pollen://data_types:data_types", "tbl_data_types", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("pollen://species:species", "tbl_sites", "tbl_taxa_tree_authors", "tbl_taxa_tree_genera", "tbl_taxa_tree_master", "facet.view_abundance")]
        [InlineData("pollen://abundance_elements:abundance_elements", "tbl_abundance_elements", "tbl_abundances", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("pollen://sample_group_sampling_contexts:sample_group_sampling_contexts", "tbl_sample_group_sampling_contexts", "tbl_sample_groups", "tbl_physical_samples", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("geoarchaeology://tbl_denormalized_measured_values_33_82:tbl_denormalized_measured_values_33_82", "facet.method_measured_values(33,82)")]
        [InlineData("geoarchaeology://geochronology:geochronology", "tbl_geochronology")]
        [InlineData("geoarchaeology://relative_age_name:relative_age_name", "tbl_relative_ages", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("geoarchaeology://sites:sites", "tbl_sites", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("geoarchaeology://feature_type:feature_type", "tbl_feature_types", "tbl_physical_sample_features", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("geoarchaeology://tbl_biblio_modern:tbl_biblio_modern", "tbl_biblio", "facet.view_taxa_biblio", "tbl_sites")]
        [InlineData("geoarchaeology://tbl_denormalized_measured_values_33_0:tbl_denormalized_measured_values_33_0", "facet.method_measured_values(33,0)")]
        [InlineData("geoarchaeology://tbl_denormalized_measured_values_37:tbl_denormalized_measured_values_37", "facet.method_measured_values(37,0)")]
        [InlineData("geoarchaeology://country:country", "tbl_locations", "tbl_site_locations", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("geoarchaeology://sample_groups:sample_groups", "tbl_sample_groups", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("geoarchaeology://data_types:data_types", "tbl_data_types", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("geoarchaeology://tbl_denormalized_measured_values_32:tbl_denormalized_measured_values_32", "facet.method_measured_values(32,0)")]
        [InlineData("geoarchaeology://sample_group_sampling_contexts:sample_group_sampling_contexts", "tbl_sample_group_sampling_contexts", "tbl_sample_groups", "tbl_physical_samples", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("dendrochronology://geochronology:geochronology", "tbl_geochronology")]
        [InlineData("dendrochronology://relative_age_name:relative_age_name", "tbl_relative_ages", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("dendrochronology://sites:sites", "tbl_sites", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("dendrochronology://family:family", "tbl_taxa_tree_families", "tbl_taxa_tree_families", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("dendrochronology://genus:genus", "tbl_taxa_tree_genera", "tbl_taxa_tree_genera", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("dendrochronology://species_author:species_author", "tbl_taxa_tree_authors", "tbl_taxa_tree_authors", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("dendrochronology://feature_type:feature_type", "tbl_feature_types", "tbl_physical_sample_features", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("dendrochronology://tbl_biblio_modern:tbl_biblio_modern", "tbl_biblio", "facet.view_taxa_biblio", "tbl_sites")]
        [InlineData("dendrochronology://country:country", "tbl_locations", "tbl_site_locations", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("dendrochronology://sample_groups:sample_groups", "tbl_sample_groups", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("dendrochronology://data_types:data_types", "tbl_data_types", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("dendrochronology://species:species", "tbl_sites", "tbl_taxa_tree_authors", "tbl_taxa_tree_genera", "tbl_taxa_tree_master", "facet.view_abundance")]
        [InlineData("dendrochronology://sample_group_sampling_contexts:sample_group_sampling_contexts", "tbl_sample_group_sampling_contexts", "tbl_sample_groups", "tbl_physical_samples", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("ceramic://geochronology:geochronology", "tbl_geochronology")]
        [InlineData("ceramic://relative_age_name:relative_age_name", "tbl_relative_ages", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("ceramic://sites:sites", "tbl_sites", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("ceramic://feature_type:feature_type", "tbl_feature_types", "tbl_physical_sample_features", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("ceramic://tbl_biblio_modern:tbl_biblio_modern", "tbl_biblio", "facet.view_taxa_biblio", "tbl_sites")]
        [InlineData("ceramic://country:country", "tbl_locations", "tbl_site_locations", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("ceramic://sample_groups:sample_groups", "tbl_sample_groups", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("ceramic://data_types:data_types", "tbl_data_types", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("ceramic://sample_group_sampling_contexts:sample_group_sampling_contexts", "tbl_sample_group_sampling_contexts", "tbl_sample_groups", "tbl_physical_samples", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("isotope://relative_age_name:relative_age_name", "tbl_relative_ages", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("isotope://sites:sites", "tbl_sites", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("isotope://feature_type:feature_type", "tbl_feature_types", "tbl_physical_sample_features", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("isotope://tbl_biblio_modern:tbl_biblio_modern", "tbl_biblio", "facet.view_taxa_biblio", "tbl_sites")]
        [InlineData("isotope://country:country", "tbl_locations", "tbl_site_locations", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("isotope://sample_groups:sample_groups", "tbl_sample_groups", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("isotope://data_types:data_types", "tbl_data_types", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        [InlineData("isotope://sample_group_sampling_contexts:sample_group_sampling_contexts", "tbl_sample_group_sampling_contexts", "tbl_sample_groups", "tbl_physical_samples", "tbl_analysis_entities", "tbl_datasets", "tbl_physical_samples")]
        public async Task Load_DomainFacetsWithSingleChildFacet_HasExpectedSqlQuery(string uri, params string[] expectedJoins)
        {
            
            var facetsConfig = MockService.FakeFacetsConfig(uri);
            var json = JsonConvert.SerializeObject(facetsConfig);
            var payload = new StringContent(json, Encoding.UTF8, "application/json");

            /* using */ var response = await Fixture.Client.PostAsync("api/facets/load", payload);

            response.EnsureSuccessStatusCode();

            var responseContent = await response.Content.ReadAsStringAsync();

            var facetContent = JsonConvert.DeserializeObject<FacetContent>(responseContent);

            Assert.NotNull(facetContent);
            // Assert.NotEmpty(facetContent.Items);

            CompareLogic compare = new CompareLogic();
            compare.Config.MembersToIgnore.AddRange(new string[] { "DomainFacet", "TargetFacet", "Facet", "Text" });

            var areEqual = compare.Compare(facetsConfig, facetContent.FacetsConfig).AreEqual; // Will fail if bogus picks are removed

            Assert.True(areEqual);

            var sqlQuery = facetContent.SqlQuery.Squeeze();

            var match = CategoryCountSqlCompilerMatcher
                .Create(facetsConfig.TargetFacet.FacetTypeId).Match(sqlQuery);

            Assert.True(match.Success);
            //Assert.Equal("count", match.AggregateType);

            Assert.True(match.InnerSelect.Success);

            Assert.NotEmpty(match.InnerSelect.Tables);
            Assert.True(expectedJoins.All(x => match.InnerSelect.Tables.Contains(x)));
        }
    }
}
